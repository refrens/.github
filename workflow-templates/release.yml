on:
  release:
    types: [published]

name: Build and push Image to ECR
jobs:
  pushimage:
    runs-on: [self-hosted]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: courier
          IMAGE_VERSION: ${{ github.event.release.tag_name }}
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          V="$IMAGE_VERSION"
          R="$ECR_REGISTRY/$ECR_REPOSITORY"
          tag="-t ${R}:${V}"
          pushtag="${R}:${V}"
          if [ ${{ github.event.release.prerelease }} == true ]
          then
            L=$(echo ${V} | sed -E 's/^([0-9]+\.)*[0-9]+-(.*?)\.[0-9]+/\2/g')
            tag="${tag} -t ${R}:canary -t ${R}:canary-${V} -t ${R}:${L}"
            pushtag="${pushtag} ${R}:canary ${R}:canary-${V} ${R}:${L}"
          else
            tag="${tag} -t ${R}:prod -t ${R}:prod-${V}"
            tag="${tag} -t ${R}:latest -t ${R}:current"
            pushtag="${pushtag} ${R}:prod ${R}:prod-${V}"
            pushtag="${pushtag} ${R}:latest ${R}:current"
          fi
          echo $pushtag
          echo $tag
          docker build $tag --build-arg NPM_TOKEN=${{ secrets.GP_TOKEN }} .
          echo ${pushtag} | xargs -n 1 docker push
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_VERSION"
